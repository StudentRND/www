{% extends "template.twig" %}
{% block section %}donate{% endblock %}
{% block page %}donate{% endblock %}
{% block title %}Donate{% endblock %}
{% block hero %}
    <section class="title">
        <article>
            <h2>Help us continue to bring programs to your community.</h2>
        </article>
    </section>
{% endblock %}
{% block content %}
    {% if errors and errors|length > 0 %}
        <section class="error">
            {% for error in errors %}
                {{ error }}{% if errors|length > 0 %}<br />{% endif %}
            {% endfor %}
            <br />
            If you continue to have problems, please contact us at
            <a href="mailto:donate@studentrnd.org">donate@studentrnd.org</a>.
        </section>
    {% endif %}
    <form class="contribution-info" id="donate-form" method="post">
        <nav class="steps">
            <ul>
                <li {% if not amount %}class="active"{% endif %}><a href="#" data-for="donation">1. Donation Amount</a></li>
                <li {% if amount %}class="active"{% endif %}><a href="#" data-for="donor">2. Donor Information</a></li>
                <li><a href="#" data-for="payment">3. Complete Donation</a></li>
            </ul>
        </nav>

        <section class="donation" {% if amount %}style="display: none"{% endif %}>
            <h2>Donation Amount</h2>

            <div class="amount">
                {% set donation_options = [10, 25, 50, 100, 250, 500, 1000] %}
                {% if amount %}
                    {% set default_donation = amount %}
                {% else %}
                    {% set default_donation = 25 %}
                {% endif %}
                {% for donation_option in donation_options %}
                    <input type="radio" name="amount" id="amount_{{ donation_option }}" value="{{ donation_option }}"
                           {% if default_donation == donation_option %}checked{% endif %} />
                    <label for="amount_{{ donation_option }}">${{ donation_option|number_format(0) }}</label>
                {% endfor %}
                <input type="text" name="amount" id="amount_custom" placeholder="Custom"
                       format="[0-9]*"
                       oninvalid="setCustomValidity('Please enter a number')"
                        {% if not (default_donation in donation_options) %}value="{{ amount }}" class="checked"{% endif %}/>
            </div>

            <div class="frequency">
                <input type="radio" name="frequency" id="frequency_monthly" value="monthly" {% if is_recurring or not errors %}checked{% endif %} />
                <label for="frequency_monthly">Monthly</label>

                <input type="radio" name="frequency" id="frequency_onetime" value="onetime" {% if not is_recurring and errors %}checked{% endif %} />
                <label for="frequency_onetime">One-Time</label>
            </div>

            <a class="next-step" href="#" data-for="donor">Next</a>

        </section>

        <section class="donor" {% if not amount %}style="display: none"{% endif %}>
            <h2>Donor Information</h2>

            <div class="name">
                <input type="text" name="first_name" id="first_name" placeholder="First Name" value="{{ first_name }}" required/>
                <input type="text" name="last_name" id="last_name" placeholder="Last Name" value="{{ last_name }}" required/>
            </div>
            <input type="email" name="email" id="email" placeholder="Email" value="{{ email }}" required/>

            <div class="option">
                <input type="checkbox" name="is_anonymous" id="is_anonymous" value="1" {% if is_anonymous %}checked{% endif %} />
                <label for="is_anonymous">Keep this donation anonymous.</label>
            </div>

            <div class="for">
                <p>If you are requesting this donation be used for a specific city, please specify here:</p>
                <input type="text" name="for" id="for" value="{{ for }}" placeholder="City (optional)" />
            </div>

            <a class="next-step" href="#" data-for="payment">Next</a>
        </section>

        <section class="payment" style="display: none">
            <h2>Payment Information</h2>
            <div class="onsite-gateway only">
                <div class="card">
                    <input type="text" id="card_number" placeholder="Card Number" data-stripe="number" />
                    <div class="exp">
                        <label for="exp">EXP</label>
                        <input type="text" id="exp" placeholder="MM/YYYY" />
                    </div>
                </div>
                <button type="submit" name="payment_method" id="card" value="stripe">Donate ${{ default_donation|number_format(0) }} by card</button>
            </div>
            <div class="alternate-gateways" style="display: none">
                <p>Or</p>
                <button type="submit" name="payment_method" id="dwolla" value="dwolla" class="gateway-dwolla">Donate ${{ default_donation|number_format(0) }} with Dwolla</button>
            </div>
            <div class="mail">
                <p>You can also donate by mailing a check to <strong>505 Broadway E, Box 141, Seattle WA 98102</strong>.</p>
                <p>Want to make a large donation or donate stocks? Contact us at <a href="mailto:donors@studentrnd.org">donors@studentrnd.org</a>.</p>
            </div>
        </section>
    </form>

    <section class="details">
        <img src="/assets/img/donate-why.jpg" alt="Why Donate?"/>
        <div class="why">
            <p>We spend $36 for each person who attends CodeDay, but only average $6 from tickets.</p>
            <p>Your contribution helps us continue to offer existing programs, and reach more students in need in your community. Contributions are tax-deductible.</p>
        </div>
    </section>

    <section class="people">
        <h2>Your contribution helps students such as...</h2>
        <ul>
            <li>
                <div class="picture" style="background-image:url(/assets/img/donate/people/naomi.jpg)"></div>
                <p><span class="name">Naomi</span>&thinsp;&mdash;&thinsp;Naiomi's experiences encouraged her to pursue a
                    degree in computer science at the University of Washington, and helped her secure internships at
                    Intel and Google.</p>
            </li>
            <li>
                <div class="picture" style="background-image:url(/assets/img/donate/people/zaq.jpg)"></div>
                <p><span class="name">Zaq</span>&thinsp;&mdash;&thinsp;CodeDay helped Zaq go from high school dropout
                    to full-time software engineer.</p>
            </li>
            <li>
                <div class="picture" style="background-image:url(/assets/img/donate/people/fisher.jpg)"></div>
                <p><span class="name">Fisher</span>&thinsp;&mdash;&thinsp;By organizing CodeDay Chicago multiple times,
                Fisher has built a strong community of young coders in Chicago.</p>
            </li>
        </ul>
    </section>

    <section class="big-impact">
        <header>
            <h2>A Few Dollars Can Go a Long Way</h2>
            <p>Your contribution makes a big impact on communities in over 30 cities nationwide:</p>
        </header>
        <div class="map"></div>
        <section class="activities">
            <ul>
                <li>
                    <h3>More Students In Your Community</h3>
                    <p>Your support allows more students attend CodeDay with more scholarships and increased capacity.</p>
                </li>
                <li>
                    <h3>Increased Access</h3>
                    <p>Contributions help bring events to new cities, helping reach students without access to tech
                       programs.</p>
                </li>
                <li>
                    <h3>New Programs</h3>
                    <p>Help us launch new programs, giving students new ways to learn, and giving beginners additional
                       opportunities to get involved.</p>
                </li>
            </ul>
        </section>
    </section>
{% endblock %}
{% block scripts %}
    <script type="text/javascript" src="https://js.stripe.com/v2/"></script>
    <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/jquery.payment/1.0.2/jquery.payment.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function(){
            // # Multi-Page Donation Form

            var switchToStep = function(for_elem) {
                var $form = $('#donate-form');
                var visible_elem = $form.children('section:visible').first();

                if (for_elem[0] == visible_elem[0]) {
                    return;
                }

                $form.find('nav li').removeClass('active');
                $form.find('nav li a[data-for="'+for_elem.attr('class')+'"]').parent().addClass('active');

                visible_elem.hide(1000);
                for_elem.show(1000);
            };

            $('nav.steps ul li a, .next-step').on('click', function(e) {
                e.preventDefault();

                var $this = $(this);
                var $form = $this.parents('form');

                switchToStep($form.children('.'+$this.attr('data-for')).first());

                return false;
            });

            $('#donate-form input').on('invalid', function(){
                var $this = $(this);

                switchToStep($this.parents('section').first())
            });

            // # Donation Amount

            var formatMoney = function(n, decPlaces, thouSeparator, decSeparator) {
                var decPlaces = isNaN(decPlaces = Math.abs(decPlaces)) ? 2 : decPlaces,
                    decSeparator = decSeparator == undefined ? "." : decSeparator,
                    thouSeparator = thouSeparator == undefined ? "," : thouSeparator,
                    sign = n < 0 ? "-" : "",
                    i = parseInt(n = Math.abs(+n || 0).toFixed(decPlaces)) + "",
                    j = (j = i.length) > 3 ? j % 3 : 0;
                return sign + (j ? i.substr(0, j) + thouSeparator : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + thouSeparator) + (decPlaces ? decSeparator + Math.abs(n - i).toFixed(decPlaces).slice(2) : "");
            };


            var updateDonateLabels = function(){

                var amountDefaultSelected = $('input[name="amount"]:checked').first();
                var customAmount = $('#amount_custom');
                var amount = 0;

                if (amountDefaultSelected.length > 0) {
                    amount = formatMoney(amountDefaultSelected.val());
                } else {
                    amount = customAmount.val();
                }

                var frequency = $('input[name="frequency"]:checked').val();

                if (frequency === 'onetime') {
                    $('.onsite-gateway').removeClass('only');
                    $('.alternate-gateways').css('display', 'block');
                    $('#card').text('Donate $'+amount+' by card');
                    $('#dwolla').text('Donate $'+amount+' with Dwolla');
                } else {
                    $('.onsite-gateway').addClass('only');
                    $('.alternate-gateways').css('display', 'none');
                    $('#card').text('Start monthly donation of $'+amount);
                }
            };


            // ## Update donation amounts when the user selects a default
            $('.amount input[type="radio"]').on('change', function(){
                $('#amount_custom').val('').removeClass('checked');
                updateDonateLabels();
            });

            // ## Deal with the custom amount option
            var last_checked_radio = null;
            $('#amount_custom').on('click', function(){ // Select the custom amount when the user selects it
                $(this).addClass('checked');
                var checked_radio = $('.amount input[type="radio"]:checked');
                if (checked_radio.length) {
                    last_checked_radio = checked_radio;
                    last_checked_radio.prop('checked', false);
                }
            });
            $('#amount_custom').on('blur', function(){ // De-select the custom amount if it's invalid.
                if (!$(this).val() || isNaN($(this).val())) {
                    $(this).val('').removeClass('checked');
                    last_checked_radio.prop('checked', true);
                } else {
                    updateDonateLabels();
                }
            });

            // ## Frequency options
            $('input[name="frequency"]').on('change', function() {
                updateDonateLabels();
            });

            // ## Do first-run update
            updateDonateLabels();

            // # Payment Info

            // ## Auto format the card number
            $('#card_number').payment('formatCardNumber');
            $('#exp').payment('formatCardExpiry');

            // ## Set up Stripe
            Stripe.setPublishableKey('{{ stripe_public|escape('js') }}');

            var prepareAmountForPostback = function()
            {
                if (!$('#amount_custom').val()) {
                    $('#amount_custom').attr('name', '');
                } else {
                    $('#amount_custom').attr('name', 'amount');
                }

                if ($('input[name="amount"]').last().val() < 1) {
                    alert('Donation must be at least $1');
                    return false;
                } else {
                    return true;
                }
            }

            var checkoutWithStripe = function()
            {
                var $form = $('#donate-form');
                $form.find('button').prop('disabled', true);

                var exp = $("#exp").payment("cardExpiryVal");
                $form.append($('<input type="hidden" data-stripe="exp_month" />').val(exp.month));
                $form.append($('<input type="hidden" data-stripe="exp_year" />').val(exp.year));

                Stripe.card.createToken($form, function (status, response) {
                    if (response.error) {
                        alert(response.error.message);
                        $form.find('button').prop('disabled', false);
                    } else {
                        var token = response.id;
                        $form.append($('<input type="hidden" name="stripe_token" />').val(token));
                        $form.append($('<input type="hidden" name="payment_method" />').val('stripe'));
                        $form.get(0).submit();
                    }
                });
            }

            var checkoutWithDwolla = function()
            {
                var $form = $('#donate-form');
                $form.append($('<input type="hidden" name="payment_method" />').val('dwolla'));
            }

            $('#dwolla').on('click', function(e) {
                if (!prepareAmountForPostback()) {
                    e.preventDefault();
                    return false;
                }

                checkoutWithDwolla();
                return true;
            });

            $('#card').on('click', function(e) {
                e.preventDefault();
                if (prepareAmountForPostback()) {
                    checkoutWithStripe();
                }
            });

            $('#donate-form').submit(function(e) {
                var $form = $(this);

                if (!prepareAmountForPostback()) {
                    e.preventDefault();
                    return false;
                }

                if (e.originalEvent.explicitOriginalTarget.id == 'dwolla') {
                    checkoutWithDwolla();
                    return true;
                } else {
                    e.preventDefault();
                    checkoutWithStripe();
                    return false;
                }
            });

        });
    </script>
    <script type="text/javascript">
        (function(){
            var previous_width = null;
            var redraw_map = function(){
                var path = d3.geo.path();

                if ($('.map').width() === previous_width) {
                    {# Window width hasn't changed, no need to redraw #}
                    return;
                } else {
                    previous_width = $('body > .hero .map').width();
                }

                var map = $('.map').html('<svg></svg>');
                var width = map.width();
                var height = map.width() * 0.6;

                var projection = d3.geo.albersUsa()
                        .scale((width * 1.2))
                        .translate([width / 2, height / 2]);

                var path = d3.geo.path()
                        .projection(projection);

                var svg = d3.select(".map svg")
                        .attr("width", width)
                        .attr("height", height);

                d3.json("/assets/topo/us.json", function(error, us) {
                    svg.insert("path", ".graticule")
                            .datum(topojson.feature(us, us.objects.land))
                            .attr("class", "land")
                            .attr("d", path);

                    svg.insert("clipPath")
                            .attr("id", "landclip")
                            .append("path", ".graticule")
                            .datum(topojson.feature(us, us.objects.land))
                            .attr("d", path);


                    svg.insert("path", ".graticule")
                            .datum(topojson.mesh(us, us.objects.states, function(a, b) { return a !== b; }))
                            .attr("class", "state-boundary")
                            .attr("d", path);

                    var regions = {% include "parts/regions.twig" %};

                    svg.selectAll("circle.footprint")
                            .data(regions)
                            .enter()
                            .append("circle")
                            .attr("cx", function(d) { return projection([d.lng, d.lat])[0]; })
                            .attr("cy", function(d) { return projection([d.lng, d.lat])[1]; })
                            .attr("r", Math.min(49, (width/12.5)))
                            .attr("clip-path", "url(#landclip)")
                            .attr("class", "footprint");

                    svg.selectAll("circle.outline")
                            .data(regions)
                            .enter()
                            .append("circle")
                            .attr("cx", function(d) { return projection([d.lng, d.lat])[0]; })
                            .attr("cy", function(d) { return projection([d.lng, d.lat])[1]; })
                            .attr("r", Math.min(21, (width/10)))
                            .attr("clip-path", "url(#landclip)")
                            .attr("class", "outline");

                    svg.selectAll("circle.city")
                            .data(regions)
                            .enter()
                            .append("circle")
                            .attr("cx", function(d) { return projection([d.lng, d.lat])[0]; })
                            .attr("cy", function(d) { return projection([d.lng, d.lat])[1]; })
                            .attr("r", Math.min(7, (width/100)))
                            .attr("class", "city");
                });

                d3.select(self.frameElement).style("height", height + "px");
            };

            redraw_map();
            $(window).on('resize', redraw_map);
        })();
    </script>
{% endblock %}
